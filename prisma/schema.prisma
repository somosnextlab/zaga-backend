// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Esquema de seguridad
model seguridad_usuarios {
  user_id     String   @id @db.Uuid
  persona_id  String?  @db.Uuid
  rol         String   @default("cliente")
  estado      String   @default("activo")
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @updatedAt @db.Timestamptz(6)

  @@map("seguridad.usuarios")
}

// Esquema financiero
model financiera_personas {
  id           String   @id @default(uuid()) @db.Uuid
  tipo_doc     String
  numero_doc   String
  nombre       String
  apellido     String
  email        String?
  telefono     String?
  fecha_nac    DateTime? @db.Date
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  updated_at   DateTime @updatedAt @db.Timestamptz(6)

  // Relaciones
  clientes     financiera_clientes[]
  garantes     financiera_garantes[]
  documentos   financiera_documentos_identidad[]

  @@unique([tipo_doc, numero_doc])
  @@map("financiera.personas")
}

model financiera_clientes {
  id          String   @id @default(uuid()) @db.Uuid
  persona_id  String   @db.Uuid
  estado      String   @default("activo")
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @updatedAt @db.Timestamptz(6)

  // Relaciones
  persona     financiera_personas @relation(fields: [persona_id], references: [id])
  solicitudes financiera_solicitudes[]

  @@map("financiera.clientes")
}

model financiera_garantes {
  id          String   @id @default(uuid()) @db.Uuid
  persona_id  String   @db.Uuid
  estado      String   @default("activo")
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @updatedAt @db.Timestamptz(6)

  // Relaciones
  persona     financiera_personas @relation(fields: [persona_id], references: [id])
  solicitud_garantes financiera_solicitud_garantes[]

  @@map("financiera.garantes")
}

model financiera_solicitudes {
  id              String   @id @default(uuid()) @db.Uuid
  cliente_id      String   @db.Uuid
  monto_solicitado Decimal @db.Decimal(15,2)
  plazo_meses     Int
  proposito       String?
  estado          String   @default("pendiente")
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  updated_at      DateTime @updatedAt @db.Timestamptz(6)

  // Relaciones
  cliente         financiera_clientes @relation(fields: [cliente_id], references: [id])
  solicitud_garantes financiera_solicitud_garantes[]
  evaluaciones    financiera_evaluaciones[]
  prestamos       financiera_prestamos[]

  @@map("financiera.solicitudes")
}

model financiera_solicitud_garantes {
  id           String   @id @default(uuid()) @db.Uuid
  solicitud_id String   @db.Uuid
  garante_id   String   @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamptz(6)

  // Relaciones
  solicitud    financiera_solicitudes @relation(fields: [solicitud_id], references: [id])
  garante      financiera_garantes @relation(fields: [garante_id], references: [id])

  @@unique([solicitud_id, garante_id])
  @@map("financiera.solicitud_garantes")
}

model financiera_documentos_identidad {
  id          String   @id @default(uuid()) @db.Uuid
  persona_id  String   @db.Uuid
  tipo_doc    String
  numero_doc  String
  archivo_url String
  estado      String   @default("pendiente")
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @updatedAt @db.Timestamptz(6)

  // Relaciones
  persona     financiera_personas @relation(fields: [persona_id], references: [id])

  @@map("financiera.documentos_identidad")
}

model financiera_fuentes_externas {
  id          String   @id @default(uuid()) @db.Uuid
  nombre      String
  tipo        String
  config      Json?
  activa      Boolean  @default(true)
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @updatedAt @db.Timestamptz(6)

  @@map("financiera.fuentes_externas")
}

model financiera_evaluaciones {
  id           String   @id @default(uuid()) @db.Uuid
  solicitud_id String   @db.Uuid
  score        Decimal? @db.Decimal(5,2)
  categoria    String?
  observaciones String?
  estado       String   @default("pendiente")
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  updated_at   DateTime @updatedAt @db.Timestamptz(6)

  // Relaciones
  solicitud    financiera_solicitudes @relation(fields: [solicitud_id], references: [id])

  @@map("financiera.evaluaciones")
}

model financiera_prestamos {
  id              String   @id @default(uuid()) @db.Uuid
  solicitud_id    String   @db.Uuid
  monto_aprobado  Decimal  @db.Decimal(15,2)
  tasa_interes    Decimal  @db.Decimal(5,4)
  plazo_meses     Int
  estado          String   @default("activo")
  fecha_desembolso DateTime?
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  updated_at      DateTime @updatedAt @db.Timestamptz(6)

  // Relaciones
  solicitud       financiera_solicitudes @relation(fields: [solicitud_id], references: [id])
  cronogramas     financiera_cronogramas[]
  pagos           financiera_pagos[]

  @@map("financiera.prestamos")
}

model financiera_cronogramas {
  id          String   @id @default(uuid()) @db.Uuid
  prestamo_id String   @db.Uuid
  cuota_numero Int
  fecha_vencimiento DateTime @db.Date
  monto_cuota Decimal @db.Decimal(15,2)
  capital     Decimal @db.Decimal(15,2)
  interes     Decimal @db.Decimal(15,2)
  estado      String  @default("pendiente")
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @updatedAt @db.Timestamptz(6)

  // Relaciones
  prestamo    financiera_prestamos @relation(fields: [prestamo_id], references: [id])
  pagos       financiera_pagos[]

  @@map("financiera.cronogramas")
}

model financiera_pagos {
  id            String   @id @default(uuid()) @db.Uuid
  prestamo_id   String   @db.Uuid
  cronograma_id String?  @db.Uuid
  monto         Decimal  @db.Decimal(15,2)
  tipo_pago     String
  metodo_pago   String?
  referencia    String?
  estado        String   @default("pendiente")
  fecha_pago    DateTime?
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)

  // Relaciones
  prestamo      financiera_prestamos @relation(fields: [prestamo_id], references: [id])
  cronograma    financiera_cronogramas? @relation(fields: [cronograma_id], references: [id])

  @@map("financiera.pagos")
}

model financiera_auditoria {
  id          String   @id @default(uuid()) @db.Uuid
  evento      String
  entidad     String
  entidad_id  String
  detalle     Json?
  usuario_id  String?  @db.Uuid
  ip          String?
  user_agent  String?
  timestamp   DateTime @default(now()) @db.Timestamptz(6)

  @@map("financiera.auditoria")
}
